---
title: "★Assessing Financial Bubbles"
author: "Max Sands"
date: "2023-03-06"
image: preview_image.png
title-block-banner: preview_image.png
description: "Read Time: 15-30 mins"
categories: [Equities, ★]
editor_options: 
  chunk_output_type: console
warning: false
message: false
echo: false
---

```{r, include=FALSE}
library(tidyverse)
library(tidyquant)
library(timetk)
library(lubridate)
library(here)
library(patchwork)

# source(here("R scripts", "plot_formatting.R"))

r3000_raw <- read_rds(here("raw_data", "Financial Bubbles", "r3000_data.rds")) %>% 
    mutate(year = year - 1) %>% 
    filter(!(classification_1 %in% c("NA", "Unclassifiable"))) %>% 
    filter(!is.na(classification_1)) %>% 
    mutate(date = ymd(paste0(year, "12-31"))) %>% 
    select(date, everything()) %>% 
    group_by(date, classification_1) %>% 
    mutate(quantile = ntile(market_cap, n = 20)) %>%
    filter(!is.na(quantile)) %>% 
    mutate(bucket = case_when(
        quantile %in% c(1:8) ~ "Small Cap",
        quantile %in% c(9:16) ~ "Mid Cap",
        quantile %in% c(17:19) ~ "Large Cap",
        quantile %in% c(20) ~ "Ultra-Large Cap"
    )) %>% 
    ungroup() %>% 
    select(date:name, bucket, everything())

ipo_data <- read_rds(here("raw_data", "Financial Bubbles", "us_ipo_data.rds"))

r3000_nested <- r3000_raw %>% 
    nest(misc             = c(num_employees:inventory_turnover),
         income_statement = c(revenue:net_income),
         balance_sheet    = c(current_assets:total_equity),
         cash_flow_statement = c(free_cash_flow, capex),
         classification   = c(contains("classification")))

sp500_prices <- read_rds(here("raw_data", "Financial Bubbles", "SP500_price_data.rds"))
sector_prices <- read_rds(here("raw_data", "Financial Bubbles", "sector_etf_prices.rds"))

sp500_ann_ret <- sp500_prices %>% 
    tq_transmute(price, periodReturn, period = "yearly") %>% 
    mutate(date_start = floor_date(date, unit = "year")) %>% 
    filter(date_start >= "1993-01-01")

sector_ann_ret <- sector_prices %>% 
    group_by(classification_1) %>% 
    tq_transmute(adjusted, periodReturn, period = "yearly") %>% 
    ungroup() %>% 
    mutate(date_start = floor_date(date, unit = "year"))
```

## A Framework for Identifying Bubbles

Financial markets have experienced several notable financial bubbles in recent history. The Dot-Com bubble in 2001, the Great Financial Crisis in 2008, and the Tech bubble in 2022 are three examples. In each case, the period leading up to, during, and after the bubble's collapse brought varying degrees of market volatility and returns. Investors who exited before the crash were able to achieve impressive returns, while those who remained in the market experienced significant losses. As such, it is valuable for investors to be able to identify where financial bubbles are forming and their stage of development to avoid potential losses.

In his book [*Principles for Navigating Big Debt Crises*](https://www.bridgewater.com/big-debt-crises/principles-for-navigating-big-debt-crises-by-ray-dalio.pdf), Ray Dalio posits that markets are cyclical and that financial bubbles form for the same underlying reasons; he outlines the following rough framework for identifying financial bubbles with the associated message:

![](financial_framework.png){fig-align="center"}

> *At this point I want to emphasize that it is a mistake to think that any one metric can serve as an indicator of an impending debt crisis. The ratio of debt to income for the economy as a whole, or even debt service payments to income for the economy as a whole, which is better, are useful but ultimately inadequate measures. To anticipate a debt crisis well, one has to look at the specific debt-service abilities of the individual entities, which are lost in these averages. More specifically, a high level of debt or debt service to income is less problematic if the average is well distributed across the economy than if it is concentrated --- especially if it is concentrated in key entities.*
>
> *- Ray Dalio*

While the above framework is tailored for large-scale economic bubbles that drastically affected national economies, we will extend, adapt, and apply this framework to create a `Grand Financial Bubble Metric` and identify financial bubbles within various sectors of the U.S. economy and markets.

<hr>

## Methods for Quantifying the Framework

The following table outlines certain figures that can help us measure each component of Dalio's Rubric:

+-----------------------------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| Framework Component                                       | Ways to Quantify                                                                                                                                                                                                                                                                                                                                                              |
+===========================================================+===============================================================================================================================================================================================================================================================================================================================================================================+
| *Are prices high relative to traditional measures?*       | 1.  Price-to-Earnings (P/E) Ratio: The P/E ratio is a popular metric for valuing stocks that compares the stock price to the earnings per share. A high P/E ratio suggests that the stock is overvalued relative to its earnings.                                                                                                                                             |
|                                                           |                                                                                                                                                                                                                                                                                                                                                                               |
|                                                           | 2.  Price-to-Book (P/B) Ratio: The P/B ratio compares a company's stock price to its book value (i.e., the value of its assets minus its liabilities). A high P/B ratio may suggest that the stock is overvalued relative to its book value.                                                                                                                                  |
|                                                           |                                                                                                                                                                                                                                                                                                                                                                               |
|                                                           | 3.  Price-to-Sales (P/S) Ratio: The P/S ratio compares a company's stock price to its sales per share. A high P/S ratio may suggest that the stock is overvalued relative to its sales.                                                                                                                                                                                       |
+-----------------------------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| *Are prices discounting future rapid price appreciation?* | 1.  Options Market: The options market can provide clues as to whether investors are expecting rapid price appreciation in the future. For example, a high call option volume or a low put option volume may suggest that investors are optimistic about future price movements.                                                                                              |
+-----------------------------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| *Are purchases being financed by high leverage?*          | 1.  Debt-to-Equity Ratio: The debt-to-equity ratio is a common measure of a company's leverage, and it compares the amount of debt the company has to its equity. A high debt-to-equity ratio may suggest that the company is financing its purchases with a significant amount of debt.                                                                                      |
|                                                           |                                                                                                                                                                                                                                                                                                                                                                               |
|                                                           | 2.  Debt-to-GDP: A measure of debt relative to the income of an entire economy.                                                                                                                                                                                                                                                                                               |
+-----------------------------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| *Are buyers/companies making forward purchases?*          | 1.  Inventory Levels: If a company's inventory levels are high, it may suggest that the company is making forward purchases to secure goods at current prices for future use or resale.                                                                                                                                                                                       |
|                                                           |                                                                                                                                                                                                                                                                                                                                                                               |
|                                                           | 2.  Purchase Orders: Publicly traded companies are required to disclose purchase orders and contracts with suppliers in their financial statements. By analyzing these disclosures, investors can gain insight into the company's purchasing activities and determine if they are making forward purchases.                                                                   |
|                                                           |                                                                                                                                                                                                                                                                                                                                                                               |
|                                                           | 3.  Capital Expenditures: Companies may make forward purchases as part of their capital expenditures, which are investments in long-term assets. For example, a manufacturing company may purchase machinery and equipment in advance to increase production capacity.                                                                                                        |
+-----------------------------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| *Have new participants entered the market?*               | 1.  IPO data from SEC Regulatory Filings: Publicly traded companies are required to file regulatory reports to the SEC when going public.                                                                                                                                                                                                                                     |
|                                                           |                                                                                                                                                                                                                                                                                                                                                                               |
|                                                           | 2.  Composition of Indices: The composition of Indices like the Russell 3000 across different sectors can give clues as to whether new participants have entered a specific market segment.                                                                                                                                                                                   |
|                                                           |                                                                                                                                                                                                                                                                                                                                                                               |
|                                                           | 3.  Number of Employees: Tracking the proportion of employees in a certain sector relative to the entire workforce may provide clues to whether new participants have entered a specific market.                                                                                                                                                                              |
+-----------------------------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| *Is there broad bullish sentiment?*                       | 1.  News Sentiment...                                                                                                                                                                                                                                                                                                                                                         |
|                                                           | 2.  Interview Market Leaders...                                                                                                                                                                                                                                                                                                                                               |
+-----------------------------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| *Does tightening risk popping the bubble?*                | 1.  Interest Coverage Ratio: The interest coverage ratio measures a company's ability to pay its interest expenses on its debt. If a company's interest coverage ratio is low, it may suggest that the company is struggling to make its interest payments. Assessing hypothetical interest coverage ratios if interest rates increase will likely help answer this question. |
+-----------------------------------------------------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+

Going forward, we will only consider the following framework components, as I believe they best encapsulate the underpinnings of the framework and are simultaneously easy to quantify:

1.  Are prices high relative to traditional measures?

2.  Are purchases being financed w/ high leverage?

3.  Have new participants entered the market?

4.  Does tightening risk popping the bubble?*\**

::: column-margin
\*We will qualitatively consider this section of the framework after building our `Grand Financial Bubble Metric`
:::

<hr>

## The Data

In order to do this, I have collected:

-   Key figures from the Income Statements, Balance Sheets, and Cash Flow Statements of all the companies in the Russell 3000 Index since 1996, including the sector classification of each company

-   Global IPO data since 1993

-   Economic Data (GDP, Federal Funds Rate, etc.)

Here is a glimpse of each data-set:

::: panel-tabset
### Russell 3000 Data

::: panel-tabset
#### Income Statement

```{r}
#| column: page

r3000_nested %>%
    head(n=10) %>%
    select(year:name, income_statement) %>%
    unnest(income_statement) %>%
    set_names(names(.) %>% str_replace_all("_", " ") %>% str_to_title()) %>%
    mutate(across(.cols = c(-Year, -Ticker, -Name), .fns = ~scales::dollar(.x, scale = 1e-6, suffix = "M", largest_with_cents = 1, style_negative = "parens")))
```

#### Balance Sheet

```{r}
#| column: page
r3000_nested %>% 
    head(n=10) %>% 
    select(year:name, balance_sheet) %>% 
    unnest(balance_sheet) %>% 
    set_names(names(.) %>% str_replace_all("_", " ") %>% str_to_title()) %>% 
    mutate(across(.cols = c(-Year, -Ticker, -Name), .fns = ~scales::dollar(.x, scale = 1e-6, suffix = "M", largest_with_cents = 1, style_negative = "parens"))) 
```

#### Cash Flow Statement

```{r}
#| column: page
r3000_nested %>% 
    head(n=10) %>% 
    select(year:name, cash_flow_statement) %>% 
    unnest(cash_flow_statement) %>% 
    set_names(names(.) %>% str_replace_all("_", " ") %>% str_to_title()) %>% 
    mutate(across(.cols = c(-Year, -Ticker, -Name), .fns = ~scales::dollar(.x, scale = 1e-6, suffix = "M", largest_with_cents = 1, style_negative = "parens")))
```

#### Miscellaneous

```{r}
#| column: page
r3000_nested %>% 
    head(n=10) %>% 
    select(year:name, misc) %>% 
    unnest(misc) %>% 
    mutate(across(.cols = c(market_cap), .fns = ~scales::dollar(.x, scale = 1e-6, suffix = "M", largest_with_cents = 1, style_negative = "parens"))) %>% 
    mutate(price = scales::dollar(price)) %>%
    mutate(across(.cols = c(contains("num")), .fns = ~scales::number(.x, big.mark = ",", scale_cut = scales::cut_long_scale()))) %>% 
    mutate(across(.cols = c(contains("price_to"), inventory_turnover), .fns = ~scales::number(round(.x, digits = 1), suffix = "x"))) %>% 
    set_names(names(.) %>% str_replace_all("_", " ") %>% str_to_title())
```

#### Classification

```{r}
#| column: page
r3000_nested %>% 
    head(n=10) %>% 
    select(year:name, classification) %>% 
    unnest(classification) %>% 
    set_names(names(.) %>% str_replace_all("_", " ") %>% str_to_title())
```
:::

### IPO Data

```{r}
#| column: page
ipo_data %>% 
    head(n=10) %>% 
    select(announced_date, ticker, issuer_name, offer_size, classification_1) %>% 
    rename(size = offer_size) %>% 
    mutate(size = scales::dollar(size, suffix = "M")) %>% 
    set_names(names(.) %>% str_replace_all("_", " ") %>% str_to_title())
```
:::

<hr>

## Quantifying the Framework

In the following, we will inspect each element of the framework with the data available to us:

<hr>

### 1) Prices are High Relative to Traditional Measures

Let's take a look at the historical P/S, P/B, and P/E ratios of each sector. To do this, we will plot the median value of these ratios since 1995 for different sectors while also aggregating by company size according to the following schema:

+-----------------+---------------------------------------------------------+
| Small Cap       | Market Cap between 0th-40th Percentile for its Sector   |
+-----------------+---------------------------------------------------------+
| Mid Cap         | Market Cap between 40th-80th Percentile for its Sector  |
+-----------------+---------------------------------------------------------+
| Large Cap       | Market Cap between 80th-95th Percentile for its Sector  |
+-----------------+---------------------------------------------------------+
| Ultra-Large Cap | Market Cap between 95th-100th Percentile for its Sector |
+-----------------+---------------------------------------------------------+

::: panel-tabset
#### Price-to-Sales

```{r}
#| column: page
#| fig-width: 12
#| fig-height: 10
r3000_nested %>% 
    select(date:bucket, misc, classification) %>% 
    unnest(c(misc, classification)) %>%
    group_by(date, classification_1, bucket) %>% 
    summarize(across(.cols = contains("price_to"), .fns = ~median(.x, na.rm = T))) %>% 
    ungroup() %>% 
    ggplot(aes(date, price_to_sales, color = bucket)) +
    geom_rect(
        data = sector_ann_ret,
        mapping = aes(xmin = date_start, xmax = date, ymin = -Inf, ymax = Inf, fill = yearly.returns, y = NULL, color = NULL),
        alpha = .5,
        show.legend = F
    ) +
    scale_fill_gradient2(low = "red", mid = "white", high = "green") +
    geom_line() +
    geom_hline(
        data = . %>%
            group_by(classification_1, bucket) %>%
            summarize(across(.cols = contains("price_to"), .fns = ~median(.x, na.rm = T))) %>%
            ungroup() %>%
            filter(bucket %in% c("Large Cap")),
        mapping = aes(yintercept = price_to_sales),
        color = palette_light()[1],
        lty = 2
    ) +
    theme_tq(base_size = 16) +
    scale_color_tq() +
    facet_wrap(~classification_1, scales = "free", ncol = 3) +
    scale_y_continuous(labels = scales::label_number(suffix = "x")) +
    scale_x_date(date_breaks = "5 years", labels = scales::label_date(format = "'%y")) +
    labs(x = "", y = "", title = "Median Price-to-Sales",
         color = "", fill = "Ann. Sector ETF Return",
         caption = str_glue("Dashed line represents median of medians for the *Large Cap* bucket.
                            Color Scale represents yearly nominal sector ETF returns - the midpoint of the color scale is 0%
                            The *Communications* sector ETF (XTL) was created in 2011")) +
    theme(legend.position = "top", plot.title = element_text(hjust = .5),
          plot.caption = element_text(size = 10, face = "italic"))
```

#### Price-to-Book

```{r}
#| column: page
#| fig-width: 12
#| fig-height: 10
r3000_nested %>% 
    select(date:bucket, misc, classification) %>% 
    unnest(c(misc, classification)) %>%
    group_by(date, classification_1, bucket) %>% 
    summarize(across(.cols = contains("price_to"), .fns = ~median(.x, na.rm = T))) %>% 
    ungroup() %>% 
    ggplot(aes(date, price_to_book, color = bucket)) +
        geom_rect(
        data = sector_ann_ret,
        mapping = aes(xmin = date_start, xmax = date, ymin = -Inf, ymax = Inf, fill = yearly.returns, y = NULL, color = NULL),
        alpha = .5,
        show.legend = F
    ) +
    scale_fill_gradient2(low = "red", mid = "white", high = "green") +
    geom_line() +
    geom_hline(
        data = . %>%
            group_by(classification_1, bucket) %>%
            summarize(across(.cols = contains("price_to"), .fns = ~median(.x, na.rm = T))) %>%
            ungroup() %>%
            filter(bucket %in% c("Large Cap")),
        mapping = aes(yintercept = price_to_book),
        color = palette_light()[1],
        lty = 2
    ) +
    theme_tq(base_size = 16) +
    scale_color_tq() +
    facet_wrap(~classification_1, scales = "free", ncol = 3) +
    scale_y_continuous(labels = scales::label_number(suffix = "x")) +
    scale_x_date(date_breaks = "5 years", labels = scales::label_date(format = "'%y")) +
labs(x = "", y = "", title = "Median Price-to-Book",
         color = "", fill = "Ann. Sector ETF Return",
         caption = str_glue("Dashed line represents median of medians for the *Large Cap* bucket.
                            Color Scale represents yearly nominal sector ETF returns - the midpoint of the color scale is 0%
                            The *Communications* sector ETF (XTL) was created in 2011")) +
    theme(legend.position = "top", plot.title = element_text(hjust = .5),
          plot.caption = element_text(size = 10, face = "italic"))
```

#### Price-to-Earnings

```{r}
#| column: page
#| fig-width: 12
#| fig-height: 10
r3000_nested %>% 
    select(date:bucket, misc, classification) %>% 
    unnest(c(misc, classification)) %>%
    group_by(date, classification_1, bucket) %>% 
    summarize(across(.cols = contains("price_to"), .fns = ~median(.x, na.rm = T))) %>% 
    ungroup() %>% 
    ggplot(aes(date, price_to_earnings, color = bucket)) +
        geom_rect(
        data = sector_ann_ret,
        mapping = aes(xmin = date_start, xmax = date, ymin = -Inf, ymax = Inf, fill = yearly.returns, y = NULL, color = NULL),
        alpha = .5,
        show.legend = F
    ) +
    scale_fill_gradient2(low = "red", mid = "white", high = "green") +
    geom_line() +
    geom_hline(
        data = . %>%
            group_by(classification_1, bucket) %>%
            summarize(across(.cols = contains("price_to"), .fns = ~median(.x, na.rm = T))) %>%
            ungroup() %>%
            filter(bucket %in% c("Large Cap")),
        mapping = aes(yintercept = price_to_earnings),
        color = palette_light()[1],
        lty = 2
    ) +
    theme_tq(base_size = 16) +
    scale_color_tq() +
    facet_wrap(~classification_1, scales = "free", ncol = 3) +
    scale_y_continuous(labels = scales::label_number(suffix = "x")) +
    scale_x_date(date_breaks = "5 years", labels = scales::label_date(format = "'%y")) +
labs(x = "", y = "", title = "Median Price-to-Earnings",
         color = "", fill = "Ann. Sector ETF Return",
         caption = str_glue("Dashed line represents median of medians for the *Large Cap* bucket.
                            Color Scale represents yearly nominal sector ETF returns - the midpoint of the color scale is 0%
                            The *Communications* sector ETF (XTL) was created in 2011")) +
    theme(legend.position = "top", plot.title = element_text(hjust = .5),
          plot.caption = element_text(size = 10, face = "italic"))
```
:::

The above is overwhelming, but it does paint the general picture that financial bubbles have formed when prices are high relative to traditional measures. For instance, the Dot-Com Bubble of '00/'01 is seen most uniformly in the above with high price ratios across the board.

However, let's try to represent the data in a more concise and standardized fashion.

#### Creating a Price Metric

Let's create a standard `Price Metric` by:

1.  Calculating the distance of each of these ratios from a median line
2.  Dividing this distance by the average absolute distance from the median line
3.  Averaging the standardized distances for the P/S, P/B, & P/E ratios together to a create a single `Price Metric`

By doing this we will have a rough estimation of how elevated prices are for each of these sectors and market cap buckets.

```{r}
#| column: page
#| fig-width: 12
#| fig-height: 10

price_metric_tbl <- r3000_nested %>% 
    select(date:bucket, misc, classification) %>% 
    unnest(c(misc, classification)) %>%
    select(date, ticker, name, bucket, classification_1, contains("price_to")) %>% 
    group_by(date, classification_1, bucket) %>% 
    summarize(across(contains("price_to"), ~median(.x, na.rm = T))) %>% 
    ungroup() %>% 
    pivot_longer(contains("price_to")) %>% 
    group_by(classification_1, bucket, name) %>% 
    mutate(med_value = median(value)) %>% 
    mutate(distance = value - med_value) %>% 
    mutate(avg_distance = mean(abs(distance), na.rm = T)) %>% 
    mutate(standardized_distance = distance / avg_distance) %>% 
    ungroup() %>%
    group_by(date, classification_1, bucket) %>% 
    summarize(price_metric = mean(standardized_distance, na.rm = T)) %>% 
    ungroup()

price_metric_tbl %>% 
    ggplot(aes(date, price_metric, color = bucket)) +
        geom_rect(
        data = sector_ann_ret,
        mapping = aes(xmin = date_start, xmax = date, ymin = -Inf, ymax = Inf, fill = yearly.returns, y = NULL, color = NULL),
        alpha = .5,
        show.legend = F
    ) +
    scale_fill_gradient2(low = "red", mid = "white", high = "green") +
    geom_line() +
    geom_hline(yintercept = 0, color = "black", lty = 2) +
    theme_tq(base_size = 16) +
    scale_color_tq() +
    facet_wrap(~classification_1, scales = "free", ncol = 3) +
    scale_y_continuous(labels = scales::label_number()) +
    scale_x_date(date_breaks = "5 years", labels = scales::label_date(format = "'%y")) +
labs(x = "", y = "", title = "Price Metric",
         color = "", fill = "Ann. Sector ETF Return",
         caption = str_glue("Color Scale represents yearly nominal sector ETF returns - the midpoint of the color scale is 0%
                            The *Communications* sector ETF (XTL) was created in 2011")) +
    theme(legend.position = "top", plot.title = element_text(hjust = .5),
          plot.caption = element_text(size = 10, face = "italic"))
```

##### Takeaways:

From eye-balling the above charts we can conclude that the following sectors were highly priced relative to traditional measures:

+------------------------+-----------------------------------+
| Sector                 | Time Periods                      |
+========================+===================================+
| Communications         | '99 - '01, '20 - '22              |
+------------------------+-----------------------------------+
| Consumer Discretionary | '20 - '22                         |
+------------------------+-----------------------------------+
| Consumer Staples       | '97 - '02, '22                    |
+------------------------+-----------------------------------+
| Energy                 | '00, '17 - '18                    |
+------------------------+-----------------------------------+
| Financials             | '98 - '02, '18                    |
+------------------------+-----------------------------------+
| Health Care            | '98-'02, '20 - '22                |
+------------------------+-----------------------------------+
| Industrials            | '20 - '22                         |
+------------------------+-----------------------------------+
| Materials              | '20 - '22                         |
+------------------------+-----------------------------------+
| Real Estate            | '19 - '22                         |
+------------------------+-----------------------------------+
| Technology             | '99 - '02, '20 - '23              |
+------------------------+-----------------------------------+
| Utilities              | '01, '07, '18 - '23               |
+------------------------+-----------------------------------+

As we continue through our framework, we will see if the same time periods resurface.

#### Digging Deeper

Now that we have time periods in which certain broad sectors were highly priced, we can repeat the above at a more granular level. This is important since large values can be washed away in averages when aggregating at broader hierarchical sector levels. For instance, we could have a high price metric of +3 for *Semiconductors* and a low metric of -3 for *Software*; if these were the only two sub-sectors in the *Technology* space, then the price metric for *Technology* would likely lie around 0. This scenario is much different from one wherein both *Semiconductors* and *Software* have price metrics of 0, which would also consequently yield a price metric of around 0 for *Technology*.

In the following, we consider only *Large Cap* and *Ultra-Large Cap* as there are fewer companies in each bucket when aggregating at a more granular sector level:

::: panel-tabset
```{r}
#| results: asis
#| fig-width: 12
#| fig-height: 15

classification_1_vec <- r3000_raw %>% distinct(classification_1) %>% pull()

# Price Metric Class 3 Tbl
price_metric_3_tbl <- r3000_nested %>% 
    select(date, misc, classification) %>% 
    unnest(c(misc, classification)) %>% 
    select(date, market_cap, contains("price_to"), classification_1, classification_3) %>% 
    filter(!is.na(market_cap)) %>% 
    group_by(date, classification_3) %>% 
    mutate(quantile = ntile(market_cap, n = 10)) %>% 
    ungroup() %>% 
    filter(quantile %in% 9:10) %>% 
    select(-market_cap, -quantile) %>% 
    group_by(date, classification_1, classification_3) %>% 
    summarize(across(contains("price_to"), ~median(.x, na.rm = T))) %>% 
    ungroup() %>% 
    pivot_longer(contains("price_to")) %>% 
    group_by(classification_1, classification_3, name) %>% 
    mutate(med_value = median(value, na.rm = T)) %>% 
    mutate(distance = value - med_value) %>% 
    mutate(avg_distance = mean(abs(distance), na.rm = T)) %>% 
    mutate(standardized_distance = distance / avg_distance) %>% 
    ungroup() %>% 
    group_by(date, classification_1, classification_3) %>% 
    summarize(price_metric = mean(standardized_distance, na.rm = T)) %>% 
    ungroup()
           
plots <- list()
for (i in seq_along(classification_1_vec)){
    
    g <- price_metric_3_tbl %>% 
    filter(classification_1 == classification_1_vec[i]) %>% 
    ggplot(aes(date, price_metric)) +
    geom_line() +
    geom_hline(yintercept = 0, color = "black", lty = 2) +
    theme_tq(base_size = 24) +
    scale_color_tq() +
    facet_wrap(~classification_3, scales = "free", ncol = 2) +
    labs(x="", y = "", title = "Price Metric", color = "") +
    scale_y_continuous(labels = scales::label_number()) +
    scale_x_date(labels = scales::label_date(format = "'%y"), date_breaks = "5 years") +
    theme(legend.position = "top", plot.title = element_text(hjust = .5))
    
    plots[[classification_1_vec[i]]] <- g
    
}

iwalk(plots, ~ {
  cat('## ', .y, '\n\n')
  
  print(.x)
  
  cat('\n\n')
  
})
```
:::

<hr>

### 2) Purchases are Being Financed w/ High Leverage

Let's take a look at the historical debt levels of each sector since 1995. Once again, we will aggregate by company size and plot the median value for different sectors. In this section we will consider two metrics to assess debt levels:

$$
Metric_1 =  \frac{D_t}{E_t} = \frac{LT\ Debt_t + ST\ Debt_t}{Equity_t}
$$

$$
Metric_2 = \frac{Avg\ Debt_t}{GDP_t} = \frac{(\frac{\sum{LT\ Debt_t + ST\ Debt_t}}{No.\ of\ Companies_t})}{GDP_t}
$$

The first metric aims to represent leverage at the company level, whereas the second metric aims to represent the significance of that debt in relation to the size of the general economy.

In the second metric, we consider the *average* debt level as a ratio to GDP because the number of companies within each sector of the Russell 3000 varies each year. Therefore, simply calculating the sum for each year could overstate debt levels for years in which there are more companies than usual. Instead, we hope to measure this in isolation in the section *`3) New entrants are entering the market`*.

::: panel-tabset
#### Metric 1

```{r}
#| column: page
#| fig-width: 12
#| fig-height: 10
r3000_nested %>% 
    select(date:bucket, -year, balance_sheet, classification) %>% 
    unnest(c(balance_sheet, classification)) %>% 
    mutate(d_e = (st_debt + lt_debt) / total_equity) %>% 
    select(date:bucket, classification_1, d_e) %>% 
    group_by(date, classification_1, bucket) %>% 
    summarize(d_e = median(d_e, na.rm = T)) %>% 
    ungroup() %>% 
    ggplot(aes(date, d_e, color = bucket)) +
        geom_rect(
        data = sector_ann_ret,
        mapping = aes(xmin = date_start, xmax = date, ymin = -Inf, ymax = Inf, fill = yearly.returns, y = NULL, color = NULL),
        alpha = .5,
        show.legend = F
    ) +
    scale_fill_gradient2(low = "red", mid = "white", high = "green") +
    geom_line() +
    theme_tq(base_size = 16) +
    scale_color_tq() +
    facet_wrap(~classification_1, scales = "free", ncol = 3) +
    scale_y_continuous(labels = scales::label_number(suffix = "x")) +
    scale_x_date(labels = scales::label_date(format = "'%y"), date_breaks = "5 years") +
    labs(x = "", y = "", title = "Median Debt-to-Equity",
         color = "", fill = "Ann. Sector ETF Return",
         caption = str_glue("Color Scale represents yearly nominal sector ETF returns - the midpoint of the color scale is 0%
                            The *Communications* sector ETF (XTL) was created in 2011")) +
    theme(legend.position = "top", plot.title = element_text(hjust = .5),
          plot.caption = element_text(size = 10, face = "italic"))
```

#### Metric 2

```{r}
#| column: page
#| fig-width: 12
#| fig-height: 10

gdp <- read_rds(here("raw_data", "Financial Bubbles", "gdp.rds")) %>% 
    mutate(gdp = gdp * 1e9)

r3000_nested %>%
    select(date:bucket, -year, balance_sheet, classification) %>%
    unnest(c(balance_sheet, classification)) %>%
    select(date:bucket, classification_1, total_debt) %>%
    filter(!is.na(total_debt)) %>%
    group_by(date, classification_1, bucket) %>%
    summarize(
        sum_debt = sum(total_debt, na.rm = T),
        count = n()
    ) %>%
    ungroup() %>%
    left_join(gdp) %>%
    mutate(avg_debt_to_gdp = ((sum_debt / count) / gdp)) %>%
    ggplot(aes(date, avg_debt_to_gdp, color = bucket)) +
        geom_rect(
        data = sector_ann_ret,
        mapping = aes(xmin = date_start, xmax = date, ymin = -Inf, ymax = Inf, fill = yearly.returns, y = NULL, color = NULL),
        alpha = .5,
        show.legend = F
    ) +
    scale_fill_gradient2(low = "red", mid = "white", high = "green") +
    geom_line() +
    theme_tq(base_size = 16) +
    scale_color_tq() +
    facet_wrap(~classification_1, scales = "free", ncol = 3) +
    scale_y_continuous(labels = scales::label_percent()) +
    scale_x_date(labels = scales::label_date(format = "'%y"), date_breaks = "5 years") +
    labs(x = "", y = "", title = "Avg. Debt-to-GDP",
         color = "", fill = "Ann. Sector ETF Return",
         caption = str_glue("Color Scale represents yearly nominal sector ETF returns - the midpoint of the color scale is 0%
                            The *Communications* sector ETF (XTL) was created in 2011")) +
    theme(legend.position = "top", plot.title = element_text(hjust = .5),
          plot.caption = element_text(size = 10, face = "italic"))
```
:::

While the data is not crystal clear, the above generally corroborates the idea that financial bubbles have formed during times of increased leverage. Again, let's try to represent the data in a more concise and standard fashion.

#### Creating a Debt Metric

Let's create a standard `Debt Metric` by:

1.  Calculating the distance of each of these ratios from a median line
2.  Dividing this distance by the average absolute distance from the median line
3.  Averaging the standardized distances for Metric 1 & Metric 2 with the respective weights of 90% and 10%*\**

::: column-margin
*\*Metric 1 is more stationary and cyclical; therefore, we are giving it a greater weight as it will be more reliable when measuring absolute debt levels.*
:::

```{r}
#| column: page
#| fig-width: 12
#| fig-height: 10

d_e_stand_dist_tbl <- r3000_nested %>% 
    select(date:bucket, -year, balance_sheet, classification) %>% 
    unnest(c(balance_sheet, classification)) %>% 
    mutate(d_e = (st_debt + lt_debt) / total_equity) %>% 
    select(date:bucket, classification_1, d_e) %>% 
    group_by(date, classification_1, bucket) %>% 
    summarize(d_e = median(d_e, na.rm = T)) %>% 
    ungroup() %>% 
    group_by(classification_1, bucket) %>% 
    mutate(med_value = median(d_e)) %>% 
    mutate(distance = d_e - med_value) %>% 
    mutate(avg_distance = mean(abs(distance), na.rm = T)) %>% 
    mutate(d_e_standardized_distance = distance / avg_distance) %>% 
    ungroup() %>% 
    select(date:bucket, d_e_standardized_distance)

d_gdp_stand_dist_tbl <- r3000_nested %>%
    select(date:bucket, -year, balance_sheet, classification) %>%
    unnest(c(balance_sheet, classification)) %>%
    select(date:bucket, classification_1, total_debt) %>%
    filter(!is.na(total_debt)) %>%
    group_by(date, classification_1, bucket) %>%
    summarize(
        sum_debt = sum(total_debt, na.rm = T),
        count = n()
    ) %>%
    ungroup() %>%
    left_join(gdp) %>%
    mutate(avg_debt_to_gdp = ((sum_debt / count) / gdp)) %>% 
    group_by(classification_1, bucket) %>% 
    mutate(med_value = median(avg_debt_to_gdp, na.rm = T)) %>% 
    mutate(distance = avg_debt_to_gdp - med_value) %>% 
    mutate(avg_distance = mean(abs(distance), na.rm = T)) %>% 
    mutate(d_gdp_standardized_distance = distance / avg_distance) %>% 
    ungroup() %>% 
    select(date:bucket, d_gdp_standardized_distance)

d_e_stand_dist_tbl %>% 
    left_join(d_gdp_stand_dist_tbl) %>% 
    mutate(debt_metric = (.9 * d_e_standardized_distance) + (.1 * d_gdp_standardized_distance)) %>% 
    ggplot(aes(date, debt_metric, color = bucket)) +
        geom_rect(
        data = sector_ann_ret,
        mapping = aes(xmin = date_start, xmax = date, ymin = -Inf, ymax = Inf, fill = yearly.returns, y = NULL, color = NULL),
        alpha = .5,
        show.legend = F
    ) +
    scale_fill_gradient2(low = "red", mid = "white", high = "green") +
    geom_line() +
    geom_hline(yintercept = 0, lty = 2) +
    theme_tq(base_size = 16) +
    scale_color_tq() +
    facet_wrap(~classification_1, scales = "free", ncol = 3) +
    scale_y_continuous(labels = scales::label_number()) +
    scale_x_date(labels = scales::label_date(format = "'%y"), date_breaks = "5 years") +
    labs(x = "", y = "", title = "Debt Metric",
         color = "", fill = "Ann. Sector ETF Return",
         caption = str_glue("Color Scale represents yearly nominal sector ETF returns - the midpoint of the color scale is 0%
                            The *Communications* sector ETF (XTL) was created in 2011")) +
    theme(legend.position = "top", plot.title = element_text(hjust = .5),
          plot.caption = element_text(size = 10, face = "italic"))
```

##### Takeaways:

Let's repeat our process and identify time periods where debt levels were high in each sector:

+------------------------+-----------------------------------+
| Sector                 | Time Periods                      |
+========================+===================================+
| Communications         | '97 - '99, '02, '10, '18 - '21    |
+------------------------+-----------------------------------+
| Consumer Discretionary | '18, '20-'22                      |
+------------------------+-----------------------------------+
| Consumer Staples       |                                   |
+------------------------+-----------------------------------+
| Energy                 | '01, '03, '19 - '22               |
+------------------------+-----------------------------------+
| Financials             | '01 - '09                         |
+------------------------+-----------------------------------+
| Health Care            | '18 - '23                         |
+------------------------+-----------------------------------+
| Industrials            | '09, '19-'23                      |
+------------------------+-----------------------------------+
| Materials              | '01 - '03, '15, '21               |
+------------------------+-----------------------------------+
| Real Estate            | '08-'10                           |
+------------------------+-----------------------------------+
| Technology             | '18 - '23                         |
+------------------------+-----------------------------------+
| Utilities              | '03 - '05, '18 - '23              |
+------------------------+-----------------------------------+

#### Digging Deeper

Once again, we can take a more granular look at the data:

::: panel-tabset
```{r}
#| results: asis
#| fig-width: 12
#| fig-height: 15

# Debt Metric Class 3 Tbl
debt_metric_3_tbl <- r3000_raw %>% 
    select(date, classification_1, classification_3, market_cap, total_debt, total_equity) %>% 
    filter(!is.na(market_cap)) %>% 
    group_by(date, classification_3) %>% 
    mutate(quantile = ntile(market_cap, n=10)) %>% 
    ungroup() %>% 
    filter(quantile %in% 9:10) %>% 
    
    mutate(d_e = total_debt / total_equity) %>% 
    group_by(date, classification_1, classification_3) %>% 
    summarize(d_e = median(d_e, na.rm = T)) %>% 
    ungroup() %>% 
    group_by(classification_1, classification_3) %>% 
    mutate(
        med_d_e = median(d_e, na.rm = T),
        distance = d_e - med_d_e,
        avg_distance = mean(abs(distance), na.rm = T),
        d_e_standardized_distance = distance / avg_distance
    ) %>% 
    ungroup() %>% 
    select(date, classification_1, classification_3, d_e_standardized_distance) %>% 
    left_join(
        r3000_raw %>% 
            select(date, classification_1, classification_3, market_cap, total_debt,
                   total_equity) %>% 
            filter(!is.na(market_cap)) %>% 
            group_by(date, classification_3) %>% 
            mutate(quantile = ntile(market_cap, n=10)) %>% 
            ungroup() %>% 
            filter(quantile %in% 9:10) %>% 
            
            drop_na() %>% 
            group_by(date, classification_1, classification_3) %>% 
            summarize(
                sum_debt = sum(total_debt, na.rm = T),
                count = n()
            ) %>% 
            ungroup() %>% 
            left_join(gdp) %>% 
            mutate(avg_debt_to_gdp = ((sum_debt / count) / gdp)) %>% 
            group_by(classification_1, classification_3) %>% 
            mutate(
                med_value = median(avg_debt_to_gdp, na.rm = T),
                distance = avg_debt_to_gdp - med_value,
                avg_distance = mean(abs(distance), na.rm = T),
                d_gdp_standardized_distance = distance / avg_distance
            ) %>% 
            ungroup() %>% 
            select(date, classification_1, classification_3, d_gdp_standardized_distance)
    ) %>% 
    mutate(debt_metric = (.9 * d_e_standardized_distance) + (.1 * d_gdp_standardized_distance)) %>% 
    select(date:classification_3, debt_metric)

plots <- list()
for (i in seq_along(classification_1_vec)){

    g <- debt_metric_3_tbl %>% 
        filter(classification_1 == classification_1_vec[i]) %>% 
        ggplot(aes(date, debt_metric)) +
        geom_line() +
        geom_hline(yintercept = 0, color = "black", lty = 2) +
        theme_tq(base_size = 24) +
        scale_color_tq() +
        facet_wrap(~classification_3, scales = "free", ncol = 2) +
        labs(x="", y = "", title = "Debt Metric", color = "") +
        scale_y_continuous(labels = scales::label_number()) +
        scale_x_date(labels = scales::label_date(format = "'%y"), date_breaks = "5 years") +
        theme(legend.position = "top", plot.title = element_text(hjust = .5))
    
    plots[[classification_1_vec[i]]] <- g
    
}

iwalk(plots, ~ {
  cat('## ', .y, '\n\n')
  
  print(.x)
  
  cat('\n\n')
  
})
```
:::

<hr>

### 3) New Entrants to the Market

There are several ways that we can assess whether new players are entering markets. The most direct and simple method is to track when private companies become public (i.e. IPO data). Let's track IPO activity by:

1.  Counting the \# of IPOs each month
2.  Summing the IPO Offer Size each month

::: panel-tabset
### IPO Count

::: panel-tabset
#### Aggregate

```{r}
#| fig-width: 8
#| fig-height: 5

ipo_data %>%
    mutate(date = floor_date(announced_date, unit = "month")) %>% 
    count(date) %>% 
    ggplot(aes(date, n)) +
        geom_rect(
        data = sp500_ann_ret,
        mapping = aes(xmin = date_start, xmax = date, ymin = 0, ymax = Inf, fill = yearly.returns, y = NULL, color = NULL),
        alpha = .5
    ) +
    scale_fill_gradient2(low = "red", mid = "white", high = "green",
                         name = "SP500 Annual Return",
                         labels = scales::label_percent()) +
    geom_col(color = palette_light()[1]) +
    theme_tq(base_size = 16) +
    labs(
        x="", y="", title = "# of IPOs", subtitle = "Monthly Frequency"
    ) +
    scale_x_date(labels = scales::label_date(format = "'%y"), date_breaks = "5 years") +
    theme(plot.title = element_text(hjust = .5),
          plot.subtitle = element_text(hjust = .5),
          legend.position = "top",
          legend.title = element_text(size = 12)) +
    guides(fill = guide_colorbar(barwidth = 15, barheight = 1, title.position = "top", title.hjust = .5))
```

#### Sector-Level

```{r}
#| column: page
#| fig-width: 12
#| fig-height: 10
ipo_data %>%
    filter(classification_1 != "Unclassifiable") %>% 
    mutate(date = floor_date(announced_date, unit = "month")) %>%
    count(date, classification_1) %>%
    ggplot(aes(date, n)) +
            geom_rect(
        data = sector_ann_ret,
        mapping = aes(xmin = date_start, xmax = date, ymin = -Inf, ymax = Inf, fill = yearly.returns, y = NULL, color = NULL),
        alpha = .5,
        show.legend = F
    ) +
    scale_fill_gradient2(low = "red", mid = "white", high = "green") +
    geom_col(color = palette_light()[1]) +
    facet_wrap(~classification_1, scales = "free", ncol = 3) +
    theme_tq(base_size = 16) +
    labs(
        x="", y = "", title = "# of IPOs", subtitle = "Monthly Frequency"
    ) +
    scale_x_date(labels = scales::label_date(format = "'%y"), date_breaks = "5 years") +
    theme(plot.title = element_text(hjust = .5), plot.subtitle = element_text(hjust = .5))
```
:::

### Sum Offer Size (\$)

::: panel-tabset
#### Aggregate

```{r}
#| fig-width: 8
#| fig-height: 5

dollar_deflator_2022_tbl <- read_rds(here("raw_data", "Financial Bubbles", "dollar_deflator_2022.rds"))

ipo_data %>%
    mutate(date = floor_date(announced_date, unit = "month")) %>% 
    group_by(date) %>% 
    summarize(offer_size = sum(offer_size)) %>% 
    left_join(dollar_deflator_2022_tbl) %>% 
    mutate(real_offer_size = offer_size / deflator) %>% 
    ggplot(aes(date, real_offer_size)) +
            geom_rect(
        data = sp500_ann_ret,
        mapping = aes(xmin = date_start, xmax = date, ymin = 0, ymax = Inf, fill = yearly.returns, y = NULL, color = NULL),
        alpha = .5
    ) +
    scale_fill_gradient2(low = "red", mid = "white", high = "green",
                         name = "SP500 Annual Return",
                         labels = scales::label_percent()) +
    geom_col(color = palette_light()[1]) +
    theme_tq(base_size = 16) +
    labs(
        x="", y="", title = "Sum of IPO Offer Sizes in 2022 Dollars", subtitle = "Monthly Frequency"
    ) +
    scale_x_date(labels = scales::label_date(format = "'%y"), date_breaks = "5 years") +
    scale_y_continuous(labels = scales::label_dollar(scale = 1e-9, suffix = "B", accuracy = .1)) +
        theme(plot.title = element_text(hjust = .5),
          plot.subtitle = element_text(hjust = .5),
          legend.position = "top",
          legend.title = element_text(size = 12)) +
    guides(fill = guide_colorbar(barwidth = 15, barheight = 1, title.position = "top", title.hjust = .5))
```

#### Sector-Level

```{r}
#| column: page
#| fig-width: 12
#| fig-height: 10

ipo_data %>%
    mutate(date = floor_date(announced_date, unit = "month")) %>% 
    group_by(date, classification_1) %>% 
    summarize(offer_size = sum(offer_size)) %>% 
    left_join(dollar_deflator_2022_tbl) %>% 
    mutate(real_offer_size = offer_size / deflator) %>% 
    ggplot(aes(date, real_offer_size)) +
            geom_rect(
        data = sector_ann_ret,
        mapping = aes(xmin = date_start, xmax = date, ymin = -Inf, ymax = Inf, fill = yearly.returns, y = NULL, color = NULL),
        alpha = .5,
        show.legend = F
    ) +
    scale_fill_gradient2(low = "red", mid = "white", high = "green") +
    geom_col(color = palette_light()[1]) +
    facet_wrap(~classification_1, scales = "free", ncol = 3) +
    theme_tq(base_size = 16) +
    labs(
        x="", y="", title = "IPO Offer Size in 2022 Dollars", subtitle = "Monthly Frequency"
    ) +
    scale_x_date(labels = scales::label_date(format = "'%y"), date_breaks = "5 years") +
    scale_y_continuous(labels = scales::label_dollar(scale = 1e-9, suffix = "B", accuracy = .1)) +
    theme(plot.title = element_text(hjust = .5), plot.subtitle = element_text(hjust = .5))
```
:::

### Avg Offer Size (\$)

::: panel-tabset
#### Aggregate

```{r}
#| fig-width: 8
#| fig-height: 5

ipo_data %>%
    mutate(date = floor_date(announced_date, unit = "month")) %>% 
    group_by(date) %>% 
    summarize(offer_size = mean(offer_size)) %>% 
    left_join(dollar_deflator_2022_tbl) %>% 
    mutate(real_offer_size = offer_size / deflator) %>% 
    ggplot(aes(date, real_offer_size)) +
            geom_rect(
        data = sp500_ann_ret,
        mapping = aes(xmin = date_start, xmax = date, ymin = 0, ymax = Inf, fill = yearly.returns, y = NULL, color = NULL),
        alpha = .5
    ) +
    scale_fill_gradient2(low = "red", mid = "white", high = "green",
                         name = "SP500 Annual Return",
                         labels = scales::label_percent()) +
    geom_col(color = palette_light()[1]) +
    theme_tq(base_size = 16) +
    labs(
        x="", y="", title = "Average IPO Offer Size in 2022 Dollars", subtitle = "Monthly Frequency"
    ) +
    scale_x_date(labels = scales::label_date(format = "'%y"), date_breaks = "5 years") +
    scale_y_continuous(labels = scales::label_dollar(scale = 1e-9, suffix = "B", accuracy = .1)) +
        theme(plot.title = element_text(hjust = .5),
          plot.subtitle = element_text(hjust = .5),
          legend.position = "top",
          legend.title = element_text(size = 12)) +
    guides(fill = guide_colorbar(barwidth = 15, barheight = 1, title.position = "top", title.hjust = .5))
```

#### Sector-Level

```{r}
#| column: page
#| fig-width: 12
#| fig-height: 10

ipo_data %>%
    mutate(date = floor_date(announced_date, unit = "month")) %>% 
    group_by(date, classification_1) %>% 
    summarize(offer_size = mean(offer_size)) %>% 
    left_join(dollar_deflator_2022_tbl) %>% 
    mutate(real_offer_size = offer_size / deflator) %>% 
    ggplot(aes(date, real_offer_size)) +
            geom_rect(
        data = sector_ann_ret,
        mapping = aes(xmin = date_start, xmax = date, ymin = -Inf, ymax = Inf, fill = yearly.returns, y = NULL, color = NULL),
        alpha = .5,
        show.legend = F
    ) +
    scale_fill_gradient2(low = "red", mid = "white", high = "green") +
    geom_col(color = palette_light()[1]) +
    facet_wrap(~classification_1, scales = "free", ncol = 3) +
    theme_tq(base_size = 16) +
    labs(
        x="", y="", title = "Average IPO Offer Size in 2022 Dollars", subtitle = "Monthly Frequency"
    ) +
    scale_x_date(labels = scales::label_date(format = "'%y"), date_breaks = "5 years") +
    scale_y_continuous(labels = scales::label_dollar(scale = 1e-9, suffix = "B", accuracy = 1)) +
    theme(plot.title = element_text(hjust = .5), plot.subtitle = element_text(hjust = .5))
```
:::

### Median Offer Size (\$)

::: panel-tabset
#### Aggregate

```{r}
#| fig-width: 8
#| fig-height: 5

ipo_data %>%
    mutate(date = floor_date(announced_date, unit = "month")) %>% 
    group_by(date) %>% 
    summarize(offer_size = median(offer_size)) %>% 
    left_join(dollar_deflator_2022_tbl) %>% 
    mutate(real_offer_size = offer_size / deflator) %>% 
    ggplot(aes(date, real_offer_size)) +
                geom_rect(
        data = sp500_ann_ret,
        mapping = aes(xmin = date_start, xmax = date, ymin = 0, ymax = Inf, fill = yearly.returns, y = NULL, color = NULL),
        alpha = .5
    ) +
    scale_fill_gradient2(low = "red", mid = "white", high = "green",
                         name = "SP500 Annual Return",
                         labels = scales::label_percent()) +
    geom_col(color = palette_light()[1]) +
    theme_tq(base_size = 16) +
    labs(
        x="", y="", title = "Median IPO Offer Size in 2022 Dollars", subtitle = "Monthly Frequency"
    ) +
    scale_x_date(labels = scales::label_date(format = "'%y"), date_breaks = "5 years") +
    scale_y_continuous(labels = scales::label_dollar(scale = 1e-9, suffix = "B", accuracy = .1)) +
        theme(plot.title = element_text(hjust = .5),
          plot.subtitle = element_text(hjust = .5),
          legend.position = "top",
          legend.title = element_text(size = 12)) +
    guides(fill = guide_colorbar(barwidth = 15, barheight = 1, title.position = "top", title.hjust = .5))
```

#### Sector-Level

```{r}
#| column: page
#| fig-width: 12
#| fig-height: 10

ipo_data %>%
    mutate(date = floor_date(announced_date, unit = "month")) %>% 
    group_by(date, classification_1) %>% 
    summarize(offer_size = median(offer_size)) %>% 
    left_join(dollar_deflator_2022_tbl) %>% 
    mutate(real_offer_size = offer_size / deflator) %>% 
    ggplot(aes(date, real_offer_size)) +
            geom_rect(
        data = sector_ann_ret,
        mapping = aes(xmin = date_start, xmax = date, ymin = -Inf, ymax = Inf, fill = yearly.returns, y = NULL, color = NULL),
        alpha = .5,
        show.legend = F
    ) +
    scale_fill_gradient2(low = "red", mid = "white", high = "green") +
    geom_col(color = palette_light()[1]) +
    facet_wrap(~classification_1, scales = "free", ncol = 3) +
    theme_tq(base_size = 16) +
    labs(
        x="", y="", title = "Median IPO Offer Size in 2022 Dollars", subtitle = "Monthly Frequency"
    ) +
    scale_x_date(labels = scales::label_date(format = "'%y"), date_breaks = "5 years") +
    scale_y_continuous(labels = scales::label_dollar(scale = 1e-9, suffix = "B", accuracy = 1)) +
    theme(plot.title = element_text(hjust = .5), plot.subtitle = element_text(hjust = .5))
```
:::
:::

From eye-balling the data, we notice that IPO data is a helpful indicator when assessing if markets are growing past capacity. We notice that the count of monthly IPOs is somewhat cyclical with peaks before time periods typically associated with financial bubbles ('01, '08, '22).

#### Creating an IPO Metric

Let's create a standard `IPO Metric` by:

1.  Calculating the distance between a 3-month rolling average and a 4-year rolling average of IPO Count & Avg. Offer Size
2.  Calculating a standardized distance for both of these rolling averages
3.  Averaging the standardized distances together to a create a single `IPO Metric`

By doing this we will have a rough estimation of how 'hot' markets are and if the number of entrants is high relative to historical averages:

::: panel-tabset
#### Aggregate

```{r}
#| fig-width: 8
#| fig-height: 5

ipo_data %>%
    mutate(date = floor_date(announced_date, unit = "month")) %>% 
    count(date) %>% 
    tk_augment_slidify(
        .value = n,
        .period = c(3, 48),
        .f = ~mean(.x),
        .partial = T,
        .align = "right"
    ) %>% 
    mutate(distance = n_roll_3 - n_roll_48) %>% 
    mutate(
        avg_dist = mean(distance),
        mad_dist = mad(distance),
        count_standardized_distance = (distance - avg_dist) / mad_dist
    ) %>% 
    select(date, count_standardized_distance) %>% 
    
    left_join(
        ipo_data %>% 
    mutate(date = floor_date(announced_date, unit = "month")) %>% 
    group_by(date) %>% 
    summarize(offer_size = mean(offer_size)) %>% 
    left_join(dollar_deflator_2022_tbl) %>% 
    mutate(real_offer_size = offer_size / deflator) %>% 
    select(date, real_offer_size) %>% 
    tk_augment_slidify(
        .value = real_offer_size,
        .period = c(3, 48),
        .f = ~mean(.x),
        .partial = T,
        .align = "right"
    ) %>% 
    mutate(distance = real_offer_size_roll_3 - real_offer_size_roll_48) %>% 
    drop_na() %>% 
    mutate(
        avg_dist = mean(distance),
        mad_dist = mad(distance),
        real_offer_size_standardized_distance = (distance - avg_dist) / mad_dist
    ) %>% 
    select(date, real_offer_size_standardized_distance)
    ) %>% 
    
    mutate(ipo_metric = (.5 * count_standardized_distance) + (.5 * real_offer_size_standardized_distance)) %>% 
    ggplot(aes(date, ipo_metric)) +
                geom_rect(
        data = sp500_ann_ret,
        mapping = aes(xmin = date_start, xmax = date, ymin = -Inf, ymax = Inf, fill = yearly.returns, y = NULL, color = NULL),
        alpha = .5
    ) +
    scale_fill_gradient2(low = "red", mid = "white", high = "green",
                         name = "SP500 Annual Return",
                         labels = scales::label_percent()) +
    geom_line() +
    geom_hline(yintercept = 0, color = "black", lty = 2) +
    theme_tq(base_size = 16) +
    scale_color_tq() +
    labs(
        x="", y="", title = "IPO Metric"
    ) +
    scale_x_date(labels = scales::label_date(format = "'%y"), date_breaks = "5 years") +
    scale_y_continuous(labels = scales::label_number()) +
            theme(plot.title = element_text(hjust = .5),
          plot.subtitle = element_text(hjust = .5),
          legend.position = "top",
          legend.title = element_text(size = 12)) +
    guides(fill = guide_colorbar(barwidth = 15, barheight = 1, title.position = "top", title.hjust = .5))
```

#### Sector-Level

```{r}
#| column: page
#| fig-width: 12
#| fig-height: 10

ipo_data %>%
    mutate(date = floor_date(announced_date, unit = "month")) %>% 
    count(date, classification_1) %>% 
    group_by(classification_1) %>% 
    tk_augment_slidify(
        .value = n,
        .period = c(3, 48),
        .f = ~median(.x),
        .partial = T,
        .align = "right"
    ) %>% 
    mutate(distance = n_roll_3 - n_roll_48) %>% 
    mutate(
        avg_dist = mean(distance),
        mad_dist = mad(distance),
        count_standardized_distance = (distance - avg_dist) / mad_dist
    ) %>% 
    ungroup() %>% 
    select(date, classification_1, count_standardized_distance) %>% 
    
    left_join(
        ipo_data %>% 
            mutate(date = floor_date(announced_date, unit = "month")) %>% 
            group_by(date, classification_1) %>% 
            summarize(offer_size = mean(offer_size)) %>% 
            ungroup() %>% 
            left_join(dollar_deflator_2022_tbl) %>% 
            mutate(real_offer_size = offer_size / deflator) %>% 
            select(date, classification_1, real_offer_size) %>% 
            group_by(classification_1) %>% 
            tk_augment_slidify(
                .value = real_offer_size,
                .period = c(3, 48),
                .f = ~median(.x),
                .partial = T,
                .align = "right"
            ) %>% 
            mutate(distance = real_offer_size_roll_3 - real_offer_size_roll_48) %>% 
            drop_na() %>% 
            mutate(
                avg_dist = mean(distance),
                mad_dist = mad(distance),
                real_offer_size_standardized_distance = (distance - avg_dist) / mad_dist
            ) %>% 
            ungroup() %>% 
            select(date, classification_1, real_offer_size_standardized_distance)
    ) %>% 
    
    mutate(ipo_metric = (.5 * count_standardized_distance) + (.5 * real_offer_size_standardized_distance)) %>% 
    ggplot(aes(date, ipo_metric)) +
            geom_rect(
        data = sector_ann_ret,
        mapping = aes(xmin = date_start, xmax = date, ymin = -Inf, ymax = Inf, fill = yearly.returns, y = NULL, color = NULL),
        alpha = .5,
        show.legend = F
    ) +
    scale_fill_gradient2(low = "red", mid = "white", high = "green") +
    geom_line() +
    geom_hline(yintercept = 0, color = "black", lty = 2) +
    facet_wrap(~classification_1, scales = "free", ncol = 3) +
    theme_tq(base_size = 16) +
    scale_color_tq() +
    labs(
        x="", y="", title = "IPO Metric"
    ) +
    scale_x_date(labels = scales::label_date(format = "'%y"), date_breaks = "5 years") +
    scale_y_continuous(labels = scales::label_number()) +
    theme(plot.title = element_text(hjust = .5))
```
:::

<hr>

#### Digging Deeper

Once again, let's take a more granular look at the data:

::: panel-tabset
```{r}
#| results: asis
#| fig-width: 12
#| fig-height: 15

# IPO Metric Class 3 Tbl
ipo_metric_3_tbl <- ipo_data %>% 
        mutate(date = floor_date(announced_date, unit = "month")) %>% 
        count(date, classification_1, classification_3) %>% 
        group_by(classification_1, classification_3) %>% 
        tk_augment_slidify(
            .value = n,
            .period = c(3, 48),
            .f = ~median(.x),
            .partial = T,
            .align = "right"
        ) %>% 
        mutate(distance = n_roll_3 - n_roll_48) %>% 
        mutate(
            avg_dist = mean(distance),
            mad_dist = mad(distance),
            count_standardized_distance = (distance - avg_dist) / mad_dist
        ) %>% 
        ungroup() %>% 
        select(date, classification_1, classification_3, count_standardized_distance) %>% 
        
        left_join(
            ipo_data %>% 
                    mutate(date = floor_date(announced_date, unit = "month")) %>% 
                    group_by(date, classification_1, classification_3) %>% 
                    summarize(offer_size = mean(offer_size)) %>% 
                    ungroup() %>% 
                    left_join(dollar_deflator_2022_tbl) %>% 
                    mutate(real_offer_size = offer_size / deflator) %>% 
                    select(date, classification_1, classification_3, real_offer_size) %>% 
                    group_by(classification_1, classification_3) %>% 
                    tk_augment_slidify(
                        .value = real_offer_size,
                        .period = c(3, 48),
                        .f = ~median(.x),
                        .partial = T,
                        .align = "right"
                    ) %>% 
                    mutate(distance = real_offer_size_roll_3 - real_offer_size_roll_48) %>% 
                    drop_na() %>% 
                    mutate(
                        avg_dist = mean(distance),
                        mad_dist = mad(distance),
                        real_offer_size_standardized_distance = (distance - avg_dist) / mad_dist
                    ) %>% 
                    ungroup() %>% 
                    select(date, classification_1,
                           classification_3, real_offer_size_standardized_distance)
        ) %>% 
    mutate(ipo_metric = case_when(
        !is.infinite(count_standardized_distance) ~ (.5 * count_standardized_distance) + (.5 * real_offer_size_standardized_distance),
        T ~ real_offer_size_standardized_distance
    )) %>% 
    select(date:classification_3, ipo_metric)

plots <- list()
for (i in seq_along(classification_1_vec)){
    
    g <- ipo_metric_3_tbl %>% 
        filter(classification_1 == classification_1_vec[i]) %>% 
            ggplot(aes(date, ipo_metric)) +
            geom_line() +
            geom_hline(yintercept = 0, color = "black", lty = 2) +
            facet_wrap(~classification_3, scales = "free", ncol = 2) +
            theme_tq(base_size = 24) +
            scale_color_tq() +
            labs(
                x="", y="", title = "IPO Metric"
            ) +
            scale_x_date(labels = scales::label_date(format = "'%y"), date_breaks = "5 years") +
            scale_y_continuous(labels = scales::label_number()) +
        theme(plot.title = element_text(hjust = .5))
    
    plots[[classification_1_vec[i]]] <- g
    
}

iwalk(plots, ~ {
  cat('## ', .y, '\n\n')
  
  print(.x)
  
  cat('\n\n')
  
})
```
:::

From observing the above at Sector Level 3, we notice that the IPO metric behaves oddly for several segments. This odd behavior is the result of limited IPO data for those segments and we will have to address this when creating our grand summary `Financial Bubble Metric`.

## Putting It All Together

Let's take each of our metrics, scale them to values between 0 and 1, and average them together to create a `Grand Financial Bubble Metric`. We will then re-scale our resulting metric between 0 and 1.

It is important to note that our IPO metric can take on extreme values at the sector level - *Health Care* in 2001 and *Financials* (w/ the SPAC surge) in 2021. Because these extreme points reduce the relative importance of other time periods, we will water them down and keep this in the back of our minds going forward.

```{r, include=FALSE}
price_metric_tbl <- r3000_nested %>% 
    select(date:bucket, misc, classification) %>% 
    unnest(c(misc, classification)) %>%
    select(date, ticker, name, bucket, classification_1, contains("price_to")) %>% 
    filter(bucket %in% c("Large Cap", "Ultra-Large Cap")) %>% 
    select(-bucket) %>% 
    group_by(date, classification_1) %>% 
    summarize(across(contains("price_to"), ~median(.x, na.rm = T))) %>% 
    ungroup() %>% 
    pivot_longer(contains("price_to")) %>% 
    group_by(classification_1, name) %>% 
    mutate(med_value = median(value)) %>% 
    mutate(distance = value - med_value) %>% 
    mutate(avg_distance = mean(abs(distance), na.rm = T)) %>% 
    mutate(standardized_distance = distance / avg_distance) %>% 
    ungroup() %>%
    group_by(date, classification_1) %>% 
    summarize(price_metric = mean(standardized_distance, na.rm = T)) %>% 
    ungroup()

debt_metric_tbl <- r3000_nested %>% 
    select(date:bucket, -year, balance_sheet, classification) %>% 
    unnest(c(balance_sheet, classification)) %>% 
    filter(bucket %in% c("Large Cap", "Ultra-Large Cap")) %>% 
    select(-bucket) %>%
    mutate(d_e = (st_debt + lt_debt) / total_equity) %>% 
    select(date, classification_1, d_e) %>% 
    group_by(date, classification_1) %>% 
    summarize(d_e = median(d_e, na.rm = T)) %>% 
    ungroup() %>% 
    group_by(classification_1) %>% 
    mutate(med_value = median(d_e)) %>% 
    mutate(distance = d_e - med_value) %>% 
    mutate(avg_distance = mean(abs(distance), na.rm = T)) %>% 
    mutate(d_e_standardized_distance = distance / avg_distance) %>% 
    ungroup() %>% 
    select(date, classification_1, d_e_standardized_distance) %>% 
    left_join(
        r3000_nested %>%
            select(date:bucket, -year, balance_sheet, classification) %>%
            unnest(c(balance_sheet, classification)) %>%
            select(date:bucket, classification_1, total_debt) %>%
            filter(!is.na(total_debt)) %>%
            filter(bucket %in% c("Large Cap", "Ultra-Large Cap")) %>% 
            select(-bucket) %>%
            group_by(date, classification_1) %>%
            summarize(
                sum_debt = sum(total_debt, na.rm = T),
                count = n()
            ) %>%
            ungroup() %>%
            left_join(gdp) %>%
            mutate(avg_debt_to_gdp = ((sum_debt / count) / gdp)) %>% 
            group_by(classification_1) %>% 
            mutate(med_value = median(avg_debt_to_gdp, na.rm = T)) %>% 
            mutate(distance = avg_debt_to_gdp - med_value) %>% 
            mutate(avg_distance = mean(abs(distance), na.rm = T)) %>% 
            mutate(d_gdp_standardized_distance = distance / avg_distance) %>% 
            ungroup() %>% 
            select(date, classification_1, d_gdp_standardized_distance)
    ) %>% 
    mutate(debt_metric = (.9 * d_e_standardized_distance) + (.1 * d_gdp_standardized_distance)) %>% 
    select(date, classification_1, debt_metric)

ipo_metric_tbl <- ipo_data %>%
    mutate(date = floor_date(announced_date, unit = "month")) %>% 
    count(date, classification_1) %>% 
    group_by(classification_1) %>% 
    tk_augment_slidify(
        .value = n,
        .period = c(3, 48),
        .f = ~median(.x),
        .partial = T,
        .align = "right"
    ) %>% 
    mutate(distance = n_roll_3 - n_roll_48) %>% 
    mutate(
        avg_dist = mean(distance),
        mad_dist = mad(distance),
        count_standardized_distance = (distance - avg_dist) / mad_dist
    ) %>% 
    ungroup() %>% 
    select(date, classification_1, count_standardized_distance) %>% 
    
    left_join(
        ipo_data %>% 
            mutate(date = floor_date(announced_date, unit = "month")) %>% 
            group_by(date, classification_1) %>% 
            summarize(offer_size = mean(offer_size)) %>% 
            ungroup() %>% 
            left_join(dollar_deflator_2022_tbl) %>% 
            mutate(real_offer_size = offer_size / deflator) %>% 
            select(date, classification_1, real_offer_size) %>% 
            group_by(classification_1) %>% 
            tk_augment_slidify(
                .value = real_offer_size,
                .period = c(3, 48),
                .f = ~median(.x),
                .partial = T,
                .align = "right"
            ) %>% 
            mutate(distance = real_offer_size_roll_3 - real_offer_size_roll_48) %>% 
            drop_na() %>% 
            mutate(
                avg_dist = mean(distance),
                mad_dist = mad(distance),
                real_offer_size_standardized_distance = (distance - avg_dist) / mad_dist
            ) %>% 
            ungroup() %>% 
            select(date, classification_1, real_offer_size_standardized_distance)
    ) %>% 
    
    mutate(ipo_metric = (.5 * count_standardized_distance) + (.5 * real_offer_size_standardized_distance)) %>% 
    select(date, classification_1, ipo_metric)
```

```{r}
#| column: page
#| fig-width: 12
#| fig-height: 10

scale_0_1 <- function(x){(x-min(x))/(max(x)-min(x))}

financial_bubble_metric_tbl <- price_metric_tbl %>% 
    left_join(debt_metric_tbl) %>% 
    pivot_longer(contains("metric"), names_to = "metric") %>% 
    mutate(date = date + days(1)) %>% 
    group_by(classification_1, metric) %>% 
    pad_by_time(
        .date_var = date,
        .by = "month"
    ) %>% 
    fill(value, .direction = "down") %>% 
    ungroup() %>% 
    pivot_wider(names_from = "metric", values_from = "value") %>% 
    left_join(ipo_metric_tbl) %>% 
    drop_na() %>% 
    # dull down IPO for Financials and Health Care
    mutate(ipo_metric = case_when(
        (date %in% c(ymd("2021-03-01"), ymd("2021-04-01"))) & (classification_1 == "Financials") ~ .5 * ipo_metric,
        (date == ymd("1999-08-01")) & (classification_1 == "Health Care") ~ .27 * ipo_metric,
        T ~ ipo_metric
    )) %>% 
    group_by(classification_1) %>% 
    mutate(across(contains("metric"), scale_0_1)) %>% 
    mutate(financial_bubble_metric = ((1/3) * price_metric) + ((1/3) * debt_metric) + ((1/3) * ipo_metric)) %>% 
    mutate(financial_bubble_metric = scale_0_1(financial_bubble_metric)) %>% 
    ungroup() %>% 
    select(date, classification_1, financial_bubble_metric)

fbm_plot_lvl1 <- ggplot() +
    geom_rect(
        data = sector_ann_ret,
        mapping = aes(xmin = date_start, xmax = date, ymin = 0, ymax = 1, fill = yearly.returns),
    alpha = .5,
    ) +
    geom_line(
        data = financial_bubble_metric_tbl,
        mapping = aes(date, financial_bubble_metric)
    ) +
    scale_fill_gradient2(low = alpha("red", 0.5), mid = alpha("white", 0.5), high = alpha("green", 0.5),
                         guide = guide_colorbar(title.position = "top",
                               barwidth = 30,
                               ticks = T,
                               ticks.colour = "black",
                               title = "SP500 Real Return",
                               title.theme = element_text(size = 16, hjust = .5)),
        labels = scales::label_percent(),
        breaks = seq(-.3, .4, .1)) +
    facet_wrap(~classification_1, scales = "free", ncol = 3) +
    theme_tq(base_size = 16) +
    scale_x_date(labels = scales::label_date(format = "'%y"), date_breaks = "5 years") +
    scale_y_continuous(labels = scales::label_number()) +
    labs(x = "", y = "", title = "Grand Financial Bubble Metric",
         color = "", subtitle = "Adjusted w/ Human Judgement",
         caption = str_glue("Color Scale represents yearly nominal sector ETF returns - the midpoint of the color scale is 0%
                            The *Communications* sector ETF (XTL) was created in 2011")) +
    theme(legend.position = "top", plot.title = element_text(hjust = .5),
          plot.caption = element_text(size = 10, face = "italic"),
          plot.subtitle = element_text(hjust = .5))

fbm_plot_lvl1
```

At this point, I will caution the reader that I would associate any inferences taken from our `Grand Financial Bubble Metric` should be taken with reservation. The metric allows for a good basic framing of where sectors are relative to history, but understanding the key dynamics at play within each sector, and the current macroeconomic environment is equally as important.

With that said, we can see that our `Grand Financial Bubble Metric` may be helpful in determining sector performance. In general, we observe positive returns when the metric is relatively low and increasing. As the market frenzies and there are new competitors, higher valuations, and debt-financed growth, market returns are particularly strong. Eventually, our metric peaks, and subsequent returns are generally poor.

There are a few things worth noting from our plot:

1.  Our confidence in the metric varies for different market segments
    i.  For instance, our metric is particularly informative for the *Energy*, *Technology*, and *Consumer* segments, but it is difficult to decipher for the *Real Estate* segment. This is likely due to the fact that we have seen several cycles in the former segments, but not in the latter.
2.  Our metric indicated potential bubbles in '00 and '22, but completely missed the mark in 2008.
    i.  `Explain this…`
3.  Our metric provides a framework for historical comparison, but it does not provide a time-based trading signal (and it should not be looked at *in isolation* when making investment decisions). For instance, if we were to look at our plot in 2018, it would have been very reasonable to conjecture that *Technology* was in a bubble and poised for poor investment returns in the coming years. Yet, '19 - '21 were extremely strong years for that industry, and the bubble did not pop until 2022. *Why is that & what are the main catalysts that cause the bubble to pop?*
    i.  *We will discuss this shortly...*
4.  The effects of bubbles in a particular segment tend to affect other segments as well, even if they appear unrelated, with varying degrees of magnitude.
    i.  In particular, we note that the *Financials* sector is often affected by bubbles in other segments. This is fairly intuitive, as the *Financials* sector implicitly interacts with all other sectors.

Let's create our `Grand Financial Bubble Metric` at a more granular level. We are only going to include the sectors that have sufficient data. For those with sufficient Price & Debt data, but insufficient IPO data, we will calculate our `Grand Financial Bubble Metric` as the average of `Price Metric` and `Debt Metric` and exclude the `IPO Metric`.

```{r}

class_3_omit_vec <- c("E-Commerce Discretionary", "Real Estate Services",
                      "Wholesale - Consumer Staples", "Construction Materials",
                      "Transportation Equipment", "Industrial Support Service",
                      "Cable & Satellite")

class_3_ipo_omit_vec <- c("Construction Materials", "Containers & Packaging",
                          "Forestry Paper & Wood Products", "Steel",
                          "Engineering & Construction", "Industrial Intermediate Prod",
                          "Industrial Support Services", "Transportation Equipment",
                          "Home & Office Products", "Apparel & Textile Products",
                          "Wholesale - Discretionary", "Home Construction",
                          "Cable & Satellite", "Household Products", "Tobacco & Cannabis",
                          "Wholesale - Consumer Staples", "Elec & Gas Marketing & Trading",
                          "Electric Utilities", "Gas & Water Utilities")

financial_bubble_metric_3_tbl <- price_metric_3_tbl %>% 
    left_join(debt_metric_3_tbl) %>% 
    pivot_longer(contains("metric"), names_to = "metric") %>% 
    mutate(date = date + days(1)) %>% 
    group_by(classification_3, metric) %>% 
    pad_by_time(
        .date_var = date,
        .by = "month"
    ) %>% 
    fill(value, .direction = "down") %>%
    fill(classification_1, .direction = "down") %>% 
    ungroup() %>% 
    pivot_wider(names_from = "metric", values_from = "value") %>% 
    left_join(ipo_metric_3_tbl) %>% 
    drop_na() %>% 
    filter(!(classification_3 %in% class_3_omit_vec)) %>% 
    # dull down IPO 'outliers'
    mutate(ipo_metric = case_when(
        date == "2010-12-01" & classification_3 == "Health Care Facilities & Svcs" ~ ipo_metric * .25,
        date %in% c(ymd("2021-03-01"), ymd("2023-04-01")) & classification_3 == "Asset Management" ~ .33 * ipo_metric,
        T ~ ipo_metric
    )) %>% 
    group_by(classification_3) %>% 
    mutate(across(contains("metric"), scale_0_1)) %>% 
    mutate(financial_bubble_metric = case_when(
        classification_3 %in% class_3_omit_vec ~ (.5 * debt_metric) + (.5 * price_metric),
        T ~ ((1/3) * price_metric) + ((1/3) * debt_metric) + ((1/3) * ipo_metric)
    )) %>% 
    mutate(financial_bubble_metric = scale_0_1(financial_bubble_metric)) %>% 
    ungroup() %>% 
    select(date, classification_1, classification_3, financial_bubble_metric)
```

::: panel-tabset
```{r}
#| results: asis
#| fig-width: 12
#| fig-height: 15

classification_1_vec_fbm <- financial_bubble_metric_3_tbl %>% 
    distinct(classification_1) %>% 
    pull()

plots <- list()
for (i in seq_along(classification_1_vec_fbm)){
    
    g <- financial_bubble_metric_3_tbl %>% 
    filter(classification_1 == classification_1_vec_fbm[i]) %>% 
    ggplot(aes(date, financial_bubble_metric)) +
    geom_line() +
    theme_tq(base_size = 24) +
    scale_color_tq() +
    facet_wrap(~classification_3, scales = "free", ncol = 2) +
    labs(x="", y = "", title = "Grand Financial Bubble Metric", color = "") +
    scale_y_continuous(labels = scales::label_number()) +
    scale_x_date(labels = scales::label_date(format = "'%y"), date_breaks = "5 years") +
    theme(legend.position = "top", plot.title = element_text(hjust = .5))
    
    plots[[classification_1_vec_fbm[i]]] <- g
    
}

iwalk(plots, ~ {
  cat('## ', .y, '\n\n')
  
  print(.x)
  
  cat('\n\n')
  
})
```
:::

`Get constituent price data and overlay color scale returns for each Sector Level 3...`

### 'Timing' the Bubble

The ability to time market bubbles is nearly impossible, but the main indicators that many people pay attention to are interest rates/measures of borrowing cost. Since a large part of bubbles are caused by debt, it is logical that the cost of borrowing money is highly relevant.

One of the most observed interest rate metrics in the industry is the "10-2" Yield Spread which measures the difference in the yield of a 10-year Treasury Bond and that of a 2-year Treasury bond. Before we plot this measure below, I think it is important to understand the significance of this metric and its implications. Let's consider two scenarios:

1.  A 10-year TBond is yielding 7% per year, and a 2-year TBond is yielding 3% per year, thus netting out to a 4% spread.
    i.  This scenario implies that the average person demands 4% more of a return on their investment to loan out their money for 10 years, rather than 2 years. At the most basic level, this is logical. The overarching rationale for this can be boiled down to *General Uncertainty about the Future:* the longer that maturity of the bond, the more time there is for unexpected events to occur that may affect the bond's value, or the buyer's perceived value of the bond, and therefore lenders demand higher rates of return for this increased uncertainty. Economists have outlined key risks attributable to this uncertainty:

        a.  *Future Inflation Expectations/Inflation Risk*: When investors expect higher inflation in the future, they demand higher yields to compensate for the loss of purchasing power. The longer the maturity of the bond, the more sensitive it is to the inflation expectations, which results in higher yields.

        b.  *Credit Risk*: Generally, longer-term bonds have a higher credit risk than shorter-term bonds. This is because the longer the maturity of the bond, the more time there is for the borrower's creditworthiness to change. If investors perceive that there is a higher risk that the issuer may default on the bond, they will demand a higher yield on longer-term bonds to compensate for this credit risk.

        c.  *Liquidity Risk*: Bonds with varying maturities may have various degrees of ease in which they can be bought or sold without affecting its price. This can be due to a lack of market participants, sudden increases or decreases in supply and demand, etc.
2.  A 10-year TBond is yielding 3% per year, and a 2-year TBond is yielding 2% per year, thus netting out to a -1% spread. When this spread is negative, it is called a yield curve inversion.
    i.  This scenario implies that the average person is willing to *give up a 1%* return on their investment to loan out their money for an additional 8 years. In other words, lenders are *more uncertain about the near-term than the long-term* (for any of the aforementioned reasons)!

If market consensus indicates greater uncertainty regarding the short-term, as it does in the second scenario, this does not bode well for the economy and markets. Therefore, it is likely that the "10-2" Yield Spread is an insightful metric for our purposes.

Many people, rightfully so, will push back and repeat the famous adage "yield-curve inversions predict 4 out of every 3 recessions," and they are right; it is impossible to predict markets with the use of solely one metric, and there are times when the yield-curve has inverted and markets rallied. This is normal, there are absolutely times when the short-term is uncertain, but the underlying foundation of markets are structurally sound, and therefore the future still holds prospect for healthy growth. However, I believe studying yield curve inversions *in conjunction* with our `Grand Financial Bubble Metric` allows for powerful insights - if markets are uncertain about the near-term ***and*** markets are structurally unsound, or have been growing beyond potential, then it is likely that future growth prospects are weak.

With that said, let's inspect interest rates and the "10-2" Yield spread:

```{r}
#| fig-width: 12
#| fig-height: 12

fed_funds <- read_rds(here("raw_data", "Financial Bubbles", "fed_funds.rds"))
t10y_2y <- read_rds(here("raw_data", "Financial Bubbles", "t10y_2y.rds"))
sp500_real_ret <- read_rds(here("raw_data", "Financial Bubbles", "sp500_real_return.rds"))
inflation <- read_rds(here("raw_data", "Financial Bubbles", "inflation.rds"))

g1 <- sp500_real_ret %>% 
    ggplot() +
    geom_rect(aes(xmin = date_start, xmax = date,
                  ymin = -Inf, ymax = Inf,
                  fill = sp500_real_return),
              alpha = .5) +
    geom_line(
        data = fed_funds, aes(date, fed_funds)
    ) +
    scale_fill_gradient2(
        high = scales::muted("green"),
        mid = sp500_real_ret %>% summarize(mean_real_return = mean(sp500_real_return)),
        guide = guide_colorbar(title.position = "top",
                               barwidth = 40,
                               ticks = T,
                               ticks.colour = "black",
                               title = "SP500 Real Return",
                               title.theme = element_text(size = 16, hjust = .5)),
        labels = scales::label_percent(),
        breaks = seq(-.3, .4, .1)
    ) +
    theme_tq(base_size = 20) +
    scale_y_continuous(labels = scales::label_percent()) +
    labs(
        x = "", y = "Federal Funds Rate", title = "Interest Rate Analysis"
    ) +
    theme(plot.title = element_text(hjust = .5), legend.position = "top") +
    coord_cartesian(xlim = c(ymd("1920-01-01"), ymd("2023-01-01")))

g2 <- sp500_real_ret %>% 
    ggplot() +
    geom_rect(aes(xmin = date_start, xmax = date,
                  ymin = -Inf, ymax = Inf,
                  fill = sp500_real_return),
              alpha = .5,
              show.legend = F) +
    geom_line(
        data = t10y_2y, aes(date, price)
    ) +
    geom_hline(yintercept = 0, color = "darkblue") +
    scale_fill_gradient2(
        high = scales::muted("green"),
        mid = sp500_real_ret %>% summarize(mean_real_return = mean(sp500_real_return))
    ) +
    theme_tq(base_size = 20) +
    scale_y_continuous(labels = scales::label_percent()) +
    labs(
        x = "", y = "Treasury 10Y - 2Y", caption = "Midpoint of the colorscale represents average real SP500 return of 5.21%"
    ) +
    coord_cartesian(xlim = c(ymd("1920-01-01"), ymd("2023-01-01"))) +
    theme(plot.caption = element_text(size = 10, face = "italic"))

g1 / g2
```

As we can see from our plots, real equity returns tend to be negative following yield curve inversions. We can also see that the Fed, when possible, drops interest rates to stimulate the economy. However, we notice that it cannot afford to do so when a) inflation is out of control and/or b) when rates are already at 0%. These scenarios are structurally different and are therefore worth investigating in depth, but we will not discuss that here.

Let's overlay the time periods when the yield curve was inverted to our `Grand Financial Bubble Metric`:

```{r}
#| column: page
#| fig-width: 12
#| fig-height: 10

yc_inv_tbl <- t10y_2y %>% 
    filter(date >= "1995-01-01") %>% 
    filter(price <= .0001)

fbm_plot_lvl1 +
    geom_point(
        data = yc_inv_tbl,
        aes(x = date, y = 0),
        alpha = .2, color = palette_light()[1]
    ) +
    labs(
        caption = str_glue("Midpoint of the color scale represents 0% nominal return.
                           Dots at the bottom of the plot indicate Yield Curve Inversion.")
    ) +
    theme(plot.caption = element_text(size = 10, face = "italic"))
```

As we can see, looking at yield curve inversions in conjunction with our `Grand Financial Bubble Metric` is helpful in explaining sector returns.

## Additional Areas of Explanation & Possible Amendments

This article scratches the surface of possible ways to identify financial bubbles and can drastically be improved. A few points worth noting include:

-   Calculating our `Price Metric` & `Debt Metric` with rolling averages (or medians) rather than using distance from the population median (similar to our `IPO Metric`)

    -   The above is *an examination of history,* *not an attempt at building a predictive model*. Because of this, I used all available data to calculate the `Price Metric` & `Debt Metric`, which involved calculating distance from the median of all years. In the long-run, this method is acceptable for predictability purposes if we assume that these metrics are cyclical in nature, and that we have enough data. However, this would not have been the case in 2000, where we would only have had 6 years of data to assess, and metrics cannot yet be considered cyclical.

    -   The investigation of the rolling average (or median) growth rate of these metrics, rather than absolute level, is also worthwhile.

-   Increasing the frequency of the data is likely to be extremely worthwhile

    -   In the above, our `Price Metric` & `Debt Metric` were calculated at yearly intervals (unlike our `IPO Metric` which could be calculated monthly) because I gathered yearly figures from the financial statements of the constituents of the Russell 3000 Index. However, much can change in the span of a year, and repeating the above at a quarterly frequency is likely to paint a clearer picture in our illustrations.

-   The logical, qualitative narrative we built around the formation of bubbles is extremely simplistic and can be improved. As such, there are many additional quantitative 'metrics' that could be created to measure and explain this narrative.

### An Overarching Takeaway

I think the above examination of history hints at an over-arching principle that applies to every facet of life - *everything has an optimal growth rate*. Whether it's a single company, the global economy, or even an individual's ability to learn a topic - there is an optimal, healthy rate of progress that is predicated upon the underlying nature and quality of the system.

In the case of a single company, that rate of progress is therefore a function of the quality of the workers, their abilities, location, tools, team chemistry, and so on. In the short-run, it is possible to grow beyond optimal; perhaps a company mandates overtime work, which will boost growth in the near-term, but if continued, this will adversely affect long-term growth, as employees will find suitable work elsewhere. In the case of an individual's learning ability, optimal growth is a function of sleep quality, nutritional intake, time spent studying, and numerous other factors. Again, in the short-run, progress can be artificially inflated; perhaps the individual sacrifices sleep to study, which will boost learning-ability in the short-run, but this rate of learning is obviously unsustainable.

With that said, an entity's optimal growth rate can obviously change with time, as the nature and the quality of the underlying system change.

It is my perspective that this idea of an 'optimal growth rate' is applicable to any subject, including investing. If we can understand an investment's optimal growth rate, its current deviation from this growth rate, and the reasons for this deviation - then we have the ability to capitalize on these deviations and inefficiencies with the correct strategies and tactics.

##### Final Remarks

*The above is intended as an exploration of historical data, and all statements and opinions are expressly my own; neither should be construed as investment advice.*
